{"version":3,"sources":["apis/paper/PaperService.ts","apis/HttpService.ts","apis/paper/PaperServiceMock.ts","apis/user/UserServiceMock.ts","apis/collabration/CollabrationServiceMock.ts","apis/index.ts","apis/user/UserService.ts","apis/collabration/CollabrationService.ts","apis/Query.tsx","components/ContributorAvatar.tsx","components/PaperList/PaperListItem.tsx"],"names":["PaperService","_HttpService","Object","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","apply","arguments","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_uploadPaper","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_viccrubs_Projects_chainpaper_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","paperDraft","data","wrap","_context","prev","next","fetch","path","method","HttpMethod","POST","body","sent","abrupt","stop","_x","_modifyPaper","_callee2","paperId","_context2","concat","PUT","_x2","_x3","_getPapers","_callee3","_context3","GET","_getPaper","_callee4","_context4","_x4","_getPaperScore","_callee5","_context5","_x5","_getPaperComments","_callee6","_context6","_x6","_scorePaper","_callee7","score","_context7","_x7","_x8","_getPaperStar","_callee8","_context8","_x9","_starPaper","_callee9","operation","_context9","star","_x10","_x11","_commentPaper","_callee10","commentContent","_context10","comment","_x12","_x13","_getPaperRefGraph","_callee11","_context11","_x14","HttpService","axiosInstance","axios","create","baseURL","headers","Content-Type","_fetch","fetchInfo","response","url","params","t0","request","status","get","comments","userId","time","content","stars","papers","authors","paper","title","refs","type","doi","keywords","abstractContent","introduction","conclusion","acknowledgement","uploadTime","state","UserService","CollabrationService","__webpack_require__","d","__webpack_exports__","getApiService","services","serviceConfig","Map","serviceType","forEach","item","set","_this","call","getUserInfoInStorage","setToken","token","_login","username","password","_register","role","e1","_getUserInfo","defaults","common","Authorization","_requestCollabration","_acceptCollabrationRequest","collabrationRequestId","_inviteCollabration","inviteeId","_acceptCollabrationInvitation","collabrationInvitationId","_getCollabrationInvitationInfo","_getCollabrationRequestInfo","Query","loading","error","undefined","setState","props","then","catch","e","_this$state","children","React","ContributorAvatar","_ref","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","antd_es_tooltip__WEBPACK_IMPORTED_MODULE_1__","antd_es_avatar__WEBPACK_IMPORTED_MODULE_3__","IconText","text","antd_es_icon__WEBPACK_IMPORTED_MODULE_3__","style","marginRight","PaperListItem","_ref2","antd_es_list__WEBPACK_IMPORTED_MODULE_1__","Item","actions","length","Meta","_reach_router__WEBPACK_IMPORTED_MODULE_6__","to","limitLength","description","Fragment","map","author","_ContributorAvatar__WEBPACK_IMPORTED_MODULE_7__"],"mappings":"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","file":"static/js/5.85eb0d6a.chunk.js","sourcesContent":["import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { PaperDraft, PaperInfo, PaperComment, PaperRef } from \"../../models/paper\";\r\n\r\nexport interface PaperIdResponse {\r\n  paperId: string;\r\n}\r\n\r\nexport interface PaperListResponse {\r\n  paperItems: PaperItem[];\r\n}\r\n\r\nexport interface PaperItem {\r\n  paperId: string;\r\n  name: string;\r\n}\r\n\r\nexport class PaperService extends HttpService {\r\n  async uploadPaper(paperDraft: PaperDraft): Promise<PaperIdResponse> {\r\n    const data = await this.fetch({\r\n      path: \"/papers\",\r\n      method: HttpMethod.POST,\r\n      body: { paperDraft },\r\n    });\r\n\r\n    return data as PaperIdResponse;\r\n  }\r\n\r\n  async modifyPaper(paperId: string, paperDraft: PaperDraft): Promise<PaperIdResponse> {\r\n    const data = await this.fetch({\r\n      path: `/papers/${paperId}`,\r\n      method: HttpMethod.PUT,\r\n      body: { paperDraft },\r\n    });\r\n\r\n    return data as PaperIdResponse;\r\n\r\n  }\r\n\r\n  async getPapers(): Promise<{ papers: PaperInfo[] }> {\r\n    const data = await this.fetch({\r\n      path: `/papers`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data as { papers: PaperInfo[] };\r\n\r\n  }\r\n\r\n  async getPaper(paperId: string): Promise<{ paper: PaperInfo }> {\r\n    const data = await this.fetch({\r\n      path: `/papers/${paperId}`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data as { paper: PaperInfo };\r\n  }\r\n\r\n  async getPaperScore(paperId: string): Promise<{ score: number; myScore: number }> {\r\n    const data = await this.fetch({\r\n      path: `/papers/${paperId}/score`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data as any;\r\n  }\r\n\r\n  async getPaperComments(paperId: string): Promise<{ comments: PaperComment[] }> {\r\n    const data = await this.fetch({\r\n      path: `/papers/${paperId}/comment`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data as any;\r\n  }\r\n\r\n\r\n  async scorePaper(paperId: string, score: number) {\r\n    await this.fetch({\r\n      path: `/papers/${paperId}/score`,\r\n      body: { score },\r\n      method: HttpMethod.POST,\r\n    });\r\n  }\r\n\r\n  async getPaperStar(paperId: string): Promise<{ stars: number; stared: boolean }> {\r\n    const data = this.fetch({\r\n      path: `/papers/${paperId}/star`,\r\n      method: HttpMethod.GET\r\n    });\r\n\r\n    return data as any;\r\n  }\r\n\r\n  async starPaper(paperId: string, operation: \"star\" | \"unstar\") {\r\n    await this.fetch({\r\n      path: `/papers/${paperId}/star`,\r\n      body: { star: operation == \"star\" },\r\n      method: HttpMethod.POST,\r\n    });\r\n  }\r\n\r\n  async commentPaper(paperId: string, commentContent: string) {\r\n    await this.fetch({\r\n      path: `/papers/${paperId}/comment`,\r\n      body: { comment: commentContent },\r\n      method: HttpMethod.POST,\r\n    });\r\n  }\r\n\r\n  async getPaperRefGraph(paperId: string): Promise<{ refs: PaperRef }> {\r\n    const data = this.fetch<any>({\r\n      path: `/papers/${paperId}/refs`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n\r\n\r\n}\r\n","import axios, { AxiosInstance } from \"axios\";\r\n\r\nexport interface FetchInfo {\r\n  path?: string;\r\n  method?: HttpMethod;\r\n  params?: any;\r\n  body?: any;\r\n  headers?: { [s: string]: string };\r\n}\r\n\r\nexport enum HttpMethod {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\",\r\n  PUT = \"PUT\",\r\n}\r\n\r\nexport interface HttpError {\r\n  status: number;\r\n  data?: any;\r\n}\r\n\r\n\r\nconst BASE_URL = \"http://36.103.228.127:5000\";\r\n\r\nconst axiosInstance = axios.create({ baseURL: BASE_URL, headers: { 'Content-Type': \"application/json \"} });\r\n\r\nexport class HttpService {\r\n\r\n  protected get axios() {\r\n    return axiosInstance;\r\n  }\r\n\r\n  /**\r\n   * Execute fetch.\r\n   * @param fetchInfo fetch paramters\r\n   * @returns parsed response body if the request is successful\r\n   * @throws A HttpError object if the request is not successful.\r\n   */\r\n  async fetch<T>(fetchInfo: FetchInfo): Promise<T> {\r\n    try {\r\n      const response = await axiosInstance({\r\n        method: fetchInfo.method,\r\n        url: fetchInfo.path,\r\n        params: fetchInfo.params,\r\n        data: fetchInfo.body,\r\n      });\r\n      return response.data;\r\n    } catch (e) {\r\n      if (e.response) {\r\n        // request is complete but the status code is out of 200-300\r\n        // throw it as HttpError\r\n        throw e as HttpError;\r\n      } else if (e.request) {\r\n        // request is sent but no response\r\n        // likely network error\r\n        // throw -1\r\n        throw {\r\n          status: -1,\r\n          data: null,\r\n        };\r\n      } else {\r\n        // some config problem\r\n        // throw -2\r\n        throw {\r\n          status: -2,\r\n          data: null,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport interface HttpServiceType {\r\n  new(...args): HttpService;\r\n}\r\n","import { PaperService, PaperIdResponse, PaperListResponse } from \"./PaperService\";\r\nimport { PaperDraft, PaperInfo, PaperComment, PaperRef } from \"../../models/paper\";\r\nimport { HttpMethod } from \"../HttpService\";\r\nimport { sleepMs } from \"../../utils\";\r\n\r\nconst comments = [\r\n  { userId: \"2\", time: \"1232132132131\", content: \"好！\", stars: 10 },\r\n  { userId: \"3\", time: \"1232142141\", content: \"好！！！\", stars: 4 },\r\n];\r\n\r\nexport const papers: PaperInfo[] = [\r\n  {\r\n    paperId: \"1\", authors: [\"123\", \"1\"], paper: {\r\n      title: \"Bug Localization with Semantic and Structural Features using Convolutional Neural Network and Cascade Forest\",\r\n      refs: [{ type: \"published\", doi: \"10.1145/3210459.3210469\", content: \"123\" }, {\r\n        type: \"chainpaper\",\r\n        paperId: \"2\",\r\n        title: \"123\",\r\n        content: \"Poor H V. An introduction to signal detection and estimation[M]. Springer Science & Business Media, 2013.\"\r\n      }],\r\n      keywords: \"case study\",\r\n      abstractContent: \"Background: Correctly localizing buggy ﬁles for bug reports together with their semantic and structural information is a crucial task, which would essentially improve the accuracy of bug localization techniques. Aims: To empirically evaluate and demonstrate the eﬀects of both semantic and structural information in bug reports and source ﬁles on improving the performance of bug localization, we propose CNN Forest involving convolutional neural network and ensemble of random forests that have excellent performance in the tasks of semantic parsing and structural information extraction. Method: We ﬁrst employ convolutional neural network with multiple ﬁlters and an ensemble of random forests with multi-grained scanning to extract semantic and structural features from the word vectors derived from bug reports and source ﬁles. And a subsequent cascade forest (a cascade of ensembles of random forests) is used to further extract deeper features and observe the correlated relationships between bug reports and source ﬁles. CNN Forest is then empirically evaluated over 10,754 bug reports extracted from AspectJ, Eclipse UI, JDT, SWT, and Tomcat projects. Results: The experiments empirically demonstrate the signiﬁcance of including semantic and structural information in bug localization, and further show that the proposed CNN Forest achieves higher Mean Average Precision and Mean Reciprocal Rank measures than the best results of the four current state-of-the-art approaches (NPCNN, LR+WE, DNNLOC, and BugLocator). Conclusion: CNN Forest is capable of deﬁning the correlated relationships between bug reports and source ﬁles, and we empirically show that semantic and structural information in bug reports and source ﬁles are crucial in improving bug localization.\",\r\n      introduction: \"123\",\r\n      content: \"string\",\r\n      conclusion: \"1321\",\r\n      acknowledgement: \"1232132121\",\r\n    },\r\n    uploadTime: \"1231232131\", score: 10, stars: 10, comments,\r\n    state: \"open\",\r\n  }\r\n];\r\n\r\nexport class PaperServiceMock extends PaperService {\r\n  async uploadPaper(paperDraft: PaperDraft): Promise<PaperIdResponse> {\r\n    return { paperId: \"123\" };\r\n  }\r\n\r\n  async modifyPaper(paperId: string, paperDraft: PaperDraft): Promise<PaperIdResponse> {\r\n    return { paperId: \"123\" };\r\n  }\r\n\r\n  async getPapers(): Promise<{ papers: PaperInfo[] }> {\r\n    return { papers };\r\n  }\r\n\r\n  async getPaper(paperId: string): Promise<{ paper: PaperInfo }> {\r\n    return { paper: papers[0] };\r\n  }\r\n\r\n  async scorePaper(paperId: string, score: number) {\r\n\r\n  }\r\n\r\n\r\n  async getPaperStar(paperId: string): Promise<{ stars: number; stared: boolean }> {\r\n    return { stars: 9, stared: Math.random() < 0.5 };\r\n  }\r\n\r\n  async getPaperScore(paperId: string): Promise<{ score: number; myScore: number }> {\r\n    return { score: 8, myScore: Math.random() < 0.5 ? 4 : -1 };\r\n  }\r\n\r\n  async getPaperComments(paperId: string): Promise<{ comments: PaperComment[] }> {\r\n    await sleepMs(1000);\r\n    return { comments };\r\n  }\r\n\r\n\r\n  async starPaper(paperId: string, operation: \"star\" | \"unstar\") {\r\n\r\n  }\r\n\r\n  async commentPaper(paperId: string, commentContent: string) {\r\n\r\n  }\r\n\r\n  async getPaperRefGraph(paperId: string): Promise<{ refs: PaperRef }> {\r\n    return {\r\n      refs:\r\n        {\r\n          type: \"published\",\r\n          doi: \"10.1145/3210459.3210469\",\r\n          content: \"123\",\r\n          refs: [        {\r\n            type: \"chainpaper\",\r\n            title: \"Environment paper\",\r\n            content: \"content 1\",\r\n            paperId: \"123\",\r\n            refs: [\r\n              {\r\n                type: \"chainpaper\",\r\n                title: \"Environment paper\",\r\n                content: \"content 1\",\r\n                paperId: \"456\",\r\n                refs: [\r\n                  {\r\n                    type: \"chainpaper\",\r\n                    title: \"Environment paper\",\r\n                    content: \"content 1\",\r\n                    paperId: \"4929\",\r\n                    refs: []\r\n                  }]\r\n              }\r\n            ]\r\n          },],\r\n        },\r\n\r\n\r\n    };\r\n  }\r\n}\r\n","\r\nimport { Response, UserService } from \"./UserService\";\r\nimport { Role, UserInfo } from \"../../models/user\";\r\nimport { papers } from \"../paper/PaperServiceMock\";\r\n\r\nexport default class UserServiceMock extends UserService {\r\n  async login(username: string, password: string): Promise<Response> {\r\n    if (username === password) {\r\n      return { userId: username, token: \"0001\" };\r\n    } else {\r\n      return { error: \"incorrect\" };\r\n    }\r\n  }\r\n\r\n  async register(username: string, password: string, role: Role): Promise<Response> {\r\n    if (username !== \"1\") {\r\n      return { userId: username, token: \"0001\" };\r\n    } else {\r\n      return { error: \"incorrect\" };\r\n    }\r\n  }\r\n\r\n  async getUserInfo(userId: string): Promise<UserInfo> {\r\n    return {\r\n      userId,\r\n      username: `${userId}'s name`,\r\n      role: \"student\",\r\n      paperIds: papers.map(x => x.paperId),\r\n      paperIdsInCollabration: papers.map(x => x.paperId),\r\n      score: 4.6,\r\n      collabrationInvitationIds: [\r\n        \"123\", \"1234\"\r\n      ],\r\n      collabrationRequestIds: [\"123\", \"1234\"],\r\n    };\r\n  }\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { CollabrationInvitation, CollabrationRequest } from \"../../models/collabration\";\r\nimport { CollabrationService } from \"./CollabrationService\";\r\n\r\nexport class CollabrationServiceMock extends CollabrationService {\r\n  async requestCollabration(paperId: string): Promise<{ collabrationRequestId: string }> {\r\n    return { collabrationRequestId: \"123\" };\r\n  }\r\n\r\n  async acceptCollabrationRequest(collabrationRequestId: string) {\r\n\r\n  }\r\n\r\n  async inviteCollabration(paperId: string, inviteeId: string): Promise<{ collabrationInvitationId: string }> {\r\n    return { collabrationInvitationId: \"123\" };\r\n  }\r\n\r\n  async acceptCollabrationInvitation(collabrationInvitationId: string) {\r\n\r\n  }\r\n\r\n  async getCollabrationInvitationInfo(collabrationInvitationId: string): Promise<CollabrationInvitation> {\r\n    return { collabrationInvitationId, time: \"1231231212\", inviteeId: \"123\", inviterId: \"123\", paperId: \"123\" };\r\n  }\r\n\r\n  async getCollabrationRequestInfo(collabrationRequestId: string): Promise<CollabrationRequest> {\r\n    return { collabrationRequestId, time: \"1231231212\", requesteeId: \"123\", requesterId: \"123\", paperId: \"123\" };\r\n\r\n  };\r\n}\r\n","import { HttpService, HttpServiceType } from \"./HttpService\";\r\nimport { UserService } from \"./user/UserService\";\r\nimport UserServiceMock from \"./user/UserServiceMock\";\r\nimport { PaperServiceMock } from \"./paper/PaperServiceMock\";\r\nimport { PaperService } from \"./paper/PaperService\";\r\nimport { CollabrationService } from \"./collabration/CollabrationService\";\r\nimport { CollabrationServiceMock } from \"./collabration/CollabrationServiceMock\";\r\n\r\nexport const USE_MOCK = false;\r\n\r\nconst services = [\r\n  [UserService, USE_MOCK ? UserServiceMock : UserService],\r\n  [PaperService, USE_MOCK ? PaperServiceMock : PaperService],\r\n  [CollabrationService, USE_MOCK ? CollabrationServiceMock : CollabrationService],\r\n];\r\n\r\n\r\nconst serviceConfig = new Map<HttpServiceType, HttpService>();\r\n\r\nservices.forEach((item) => {\r\n  serviceConfig.set(item[0], new item[1]());\r\n});\r\n\r\nexport function getApiService<T extends HttpServiceType>(serviceType: T) {\r\n  return serviceConfig.get(serviceType)! as InstanceType<T>;\r\n}\r\n\r\n","import { HttpError, HttpMethod, HttpService } from \"../HttpService\";\r\nimport { Role, UserInfo } from \"../../models/user\";\r\nimport { getUserInfoInStorage } from \"../../stores/UserStore\";\r\n\r\nexport interface Response {\r\n  userId?: string;\r\n  token?: string;\r\n  error?: \"incorrect\" | \"frozen\";\r\n}\r\n\r\nexport class UserService extends HttpService {\r\n\r\n  constructor() {\r\n    super();\r\n    // data\r\n    const data = getUserInfoInStorage();\r\n    if (data) {\r\n      this.setToken(data.token);\r\n    }\r\n  }\r\n\r\n  async login(username: string, password: string): Promise<Response> {\r\n    try {\r\n      const data = await this.fetch<Response>({\r\n        method: HttpMethod.GET,\r\n        params: { username, password },\r\n        path: \"/login\",\r\n      });\r\n      if (data.token) {\r\n        this.setToken(data.token);\r\n      }\r\n      return data;\r\n    } catch (e) {\r\n      return (e as HttpError).data;\r\n    }\r\n\r\n  }\r\n\r\n  async register(username: string, password: string, role: Role): Promise<Response> {\r\n    try {\r\n      const data = await this.fetch({\r\n        method: HttpMethod.POST,\r\n        body: { username, password, role },\r\n        path: \"/register\",\r\n      });\r\n      return data;\r\n    } catch (e) {\r\n      const e1 = e as HttpError;\r\n      return e1.data;\r\n    }\r\n\r\n  }\r\n\r\n  async getUserInfo(userId: string): Promise<UserInfo> {\r\n    try {\r\n      const data = await this.fetch<UserInfo>({\r\n        method: HttpMethod.GET,\r\n        path: `/user/${userId}`,\r\n      });\r\n      return data;\r\n    } catch (e) {\r\n      const e1 = e as HttpError;\r\n      return e1.data;\r\n    }\r\n\r\n  }\r\n\r\n  setToken(token: string) {\r\n    if (token) {\r\n      this.axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    } else {\r\n      delete this.axios.defaults.headers.common.Authorization;\r\n    }\r\n  }\r\n}\r\n","import {HttpMethod, HttpService} from \"../HttpService\";\r\nimport {CollabrationInvitation, CollabrationRequest} from \"../../models/collabration\";\r\n\r\nexport class CollabrationService extends HttpService {\r\n  async requestCollabration(paperId: string): Promise<{ collabrationRequestId: string }> {\r\n    const data = await this.fetch({\r\n      path: `/collabration/request`,\r\n      body: { paperId },\r\n      method: HttpMethod.POST,\r\n    });\r\n\r\n    return data as any;\r\n  }\r\n\r\n  async acceptCollabrationRequest(collabrationRequestId: string) {\r\n    await this.fetch({\r\n      path: `collabration/request/${collabrationRequestId}`,\r\n      method: HttpMethod.POST,\r\n    });\r\n  }\r\n\r\n  async inviteCollabration(paperId: string, inviteeId: string): Promise<{ collabrationInvitationId: string }> {\r\n    const data = await this.fetch({\r\n      path: `/collabration/invitation`,\r\n      body: { paperId, inviteeId },\r\n      method: HttpMethod.POST,\r\n    });\r\n\r\n    return data as any;\r\n  }\r\n\r\n  async acceptCollabrationInvitation(collabrationInvitationId: string) {\r\n    await this.fetch({\r\n      path: `/collabration/invitation/${collabrationInvitationId}`,\r\n      method: HttpMethod.POST,\r\n    });\r\n  }\r\n\r\n  async getCollabrationInvitationInfo(collabrationInvitationId: string): Promise<CollabrationInvitation> {\r\n    const data = await this.fetch<CollabrationInvitation>({\r\n      path: `/collabration/invitation/${collabrationInvitationId}`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async getCollabrationRequestInfo(collabrationRequestId: string): Promise<CollabrationRequest> {\r\n    const data = this.fetch<CollabrationRequest>({\r\n      path: `/collabration/request/${collabrationRequestId}`,\r\n      method: HttpMethod.GET,\r\n    });\r\n\r\n    return data;\r\n  };\r\n}\r\n","import * as React from \"react\";\r\n\r\ninterface Props<T> {\r\n  children: (data: T,\r\n             loading: boolean,\r\n             error: any,\r\n             refetch: () => void,\r\n  ) => React.ReactNode;\r\n  call: () => Promise<T>;\r\n}\r\n\r\ninterface State<T> {\r\n  loading: boolean;\r\n  error: any;\r\n  data?: T;\r\n}\r\n\r\nexport default class Query<T> extends React.PureComponent<Props<T>, State<T>> {\r\n\r\n  state = {\r\n    loading: true,\r\n    error: null,\r\n    data: undefined,\r\n  };\r\n\r\n  fetch = () => {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.props.call().then((data) => {\r\n      this.setState({\r\n        loading: false,\r\n        error: null,\r\n        data,\r\n      });\r\n    }).catch((e) => {\r\n      this.setState({\r\n        loading: false,\r\n        error: e,\r\n        data: undefined,\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n\r\n  render() {\r\n    const { data, loading, error } = this.state;\r\n    return this.props.children(data!!, loading, error, this.fetch);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Tooltip, Avatar } from \"antd\";\r\n\r\ninterface Props {\r\n  userId: string;\r\n}\r\n\r\nconst ContributorAvatar = ({ userId }: Props) => {\r\n  return (\r\n    <Tooltip title={userId}>\r\n      <Avatar>{userId}</Avatar>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nexport default ContributorAvatar;\r\n\r\n","import React from \"react\";\r\nimport { List, Icon } from \"antd\";\r\nimport { PaperInfo } from \"../../models/paper\";\r\nimport { limitLength } from \"../../utils\";\r\nimport { Link } from \"@reach/router\";\r\nimport ContributorAvatar from \"../ContributorAvatar\";\r\n\r\ninterface Props {\r\n  item: PaperInfo;\r\n}\r\n\r\nconst IconText = ({ type, text }: { type: string; text: React.ReactNode; }) => (\r\n  <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text}\r\n  </span>\r\n);\r\n\r\nconst PaperListItem: React.FC<Props> = ({ item }) => (\r\n  <List.Item\r\n    actions={[\r\n      <IconText type=\"star-o\" text={item.stars} />,\r\n      <IconText type=\"message\" text={item.comments.length} />,\r\n    ]}\r\n  >\r\n    <List.Item.Meta\r\n      title={<Link to={`/papers/${item.paperId}`}>{limitLength(item.paper.title)}</Link>}\r\n      description={<>\r\n        <span>{item.uploadTime}</span> | {\"  \"}\r\n        {item.authors.map((author) => <ContributorAvatar key={author} userId={author} />)}\r\n      </>}\r\n    >\r\n    </List.Item.Meta>\r\n    {limitLength(item.paper.abstractContent, 300)}\r\n\r\n  </List.Item>\r\n);\r\n\r\nexport default PaperListItem;\r\n"],"sourceRoot":""}